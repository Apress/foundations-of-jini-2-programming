/* Configuration source file for an SSL server */

import java.security.Permission;

import net.jini.constraint.BasicMethodConstraints;
import net.jini.core.constraint.InvocationConstraint;
import net.jini.core.constraint.InvocationConstraints;
import net.jini.core.constraint.ClientAuthentication;
import net.jini.core.constraint.ClientMinPrincipal;
import net.jini.jeri.*;
import net.jini.jeri.ssl.*;
import com.sun.jini.config.KeyStores;

security.FileClassifierServer {

    /* class name for the service */
    serviceName = "rmi.FileClassifierImpl";

   /* Keystore for getting principals */
   private static users=
        KeyStores.getKeyStore("file:resources/security/truststore.server", null);
   private static clientUser = 
        KeyStores.getX500Principal("client", users);

    /* Exporter for the server proxy */
    exporter =
	/* Use secure exporter */
	new BasicJeriExporter(
	    /* Use SSL transport */
	    SslServerEndpoint.getInstance(0),
            new BasicILFactory(
		/* Require integrity for all methods */
		new BasicMethodConstraints(
		    new InvocationConstraints(
                                new InvocationConstraint[] {
                                      ClientAuthentication.YES,
                                      new ClientMinPrincipal(clientUser)
                                },
				(InvocationConstraint[]) null)),
		/* No Permission */
		null
            )
        );
}
