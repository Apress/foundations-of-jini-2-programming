<!-- 
     Project name must be the same as the filename which must
     be the same as the main.class. Builds jar files with the
     same name
  -->
 
<project name="audio.httpsource.DirDirectoryServer">

    <!-- Inherits properties from ../build.xml:
         jini.home
         jini.jars
         src
         dist
         build
         httpd.classes
      -->

    <!-- files for this project --> 
    <!-- Source files for the server -->
    <!-- generated by 
         java -cp /usr/local/src/jdk/lib/tools.jar:/usr/local/jini2_0/lib/tools.jar \
                  com.sun.jini.tool.ClassDep \
               -cp build/:/usr/local/jini2_0/lib/jini-core.jar:/usr/local/jini2_0/lib/jini-ext.jar \
                  audio.httpsource.DirDirectoryServer  -out java -out net.jini --> 
    <property name="src.files"   
              value="
                     audio/common/AlreadyPlayingException.java
                     audio/common/AlreadyRecordingException.java
                     audio/common/Directory.java
                     audio/common/IncompatableSinkException.java
                     audio/common/IncompatableSourceException.java
                     audio/common/NoSuchListenerException.java
                     audio/common/NoSuchSinkException.java
                     audio/common/NoSuchSourceException.java
                     audio/common/NotPlayingException.java
                     audio/common/NotRecordingException.java
                     audio/common/Sink.java
                     audio/common/Source.java
                     audio/common/TooManySinksException.java
                     audio/common/TooManySourcesException.java
                     audio/http/HttpMP3SourceImpl.java
                     audio/http/HttpOggSourceImpl.java
                     audio/http/HttpSourceImpl.java
                     audio/http/HttpWAVSourceImpl.java
                     audio/httpsource/DirDirectoryServer.java
                     audio/httpsource/DirectoryServerOpt.java
                     audio/presentation/MP3.java
                     audio/presentation/Ogg.java
                     audio/presentation/WAV.java
                     audio/transport/HttpSource.java
                     audio/transport/HttpURL.java
                    "/>


    <!-- Class files to run the file source server -->
    <property name="class.files" 
              value="
                     audio/common/AlreadyPlayingException.class
                     audio/common/AlreadyRecordingException.class
                     audio/common/Directory.class
                     audio/common/IncompatableSinkException.class
                     audio/common/IncompatableSourceException.class
                     audio/common/NoSuchListenerException.class
                     audio/common/NoSuchSinkException.class
                     audio/common/NoSuchSourceException.class
                     audio/common/NotPlayingException.class
                     audio/common/NotRecordingException.class
                     audio/common/Sink.class
                     audio/common/Source.class
                     audio/common/TooManySinksException.class
                     audio/common/TooManySourcesException.class
                     audio/http/HttpMP3SourceImpl.class
                     audio/http/HttpOggSourceImpl.class
                     audio/http/HttpSourceImpl.class
                     audio/http/HttpWAVSourceImpl.class
                     audio/httpsource/DirDirectoryServer.class
                     audio/httpsource/DirDirectoryServer$1.class
                     audio/httpsource/DirectoryServerOpt.class
                     audio/presentation/MP3.class
                     audio/presentation/Ogg.class
                     audio/presentation/WAV.class
                     audio/transport/HttpSource.class
                     audio/transport/HttpURL.class
                    "/>
 

    <!-- Class files for the client to download -->
    <property name="class.files.dl" 
              value="
                     audio/transport/HttpURL.class
                     audio/transport/HttpSource.class
                     audio/common/Directory.class
                     audio/common/AlreadyPlayingException.class
                     audio/common/AlreadyRecordingException.class
                     audio/common/Directory.class
                     audio/common/IncompatableSinkException.class
                     audio/common/IncompatableSourceException.class
                     audio/common/NoSuchListenerException.class
                     audio/common/NoSuchSinkException.class
                     audio/common/NoSuchSourceException.class
                     audio/common/NotPlayingException.class
                     audio/common/NotRecordingException.class
                     audio/common/Sink.class
                     audio/common/Source.class
                     audio/common/TooManySinksException.class
                     audio/common/TooManySourcesException.class
                     audio/presentation/MP3.class
                     audio/presentation/Ogg.class
                     audio/presentation/WAV.class
                     audio/transport/HttpSource.class
                     audio/transport/HttpURL.class
                    "/>

    <!-- Uncomment if no class files downloaded to the client -->
    <!-- <property name="no-dl" value="true"/> -->

    <!-- derived names - may be changed -->
    <property name="jar.file"    
              value="${ant.project.name}.jar"/>

    <property name="jar.file.dl"    
              value="${ant.project.name}-dl.jar"/>

    <property name="main.class"
              value="${ant.project.name}"/>
    <property name="codebase"
              value="http://${localhost}/classes/${jar.file.dl}"/>


    <!-- targets -->
    <target name="all" depends="compile"/> 

    <target name="compile">
	<javac destdir="${build}" srcdir="${src}" 
	       classpath="${jini.jars}"
               debug="true"
               includes="${src.files}">
        </javac>
    </target>

    <target name="dist" depends="compile"
            description="generate the distribution">
	<jar jarfile="${dist}/${jar.file}"
             basedir="${build}"
	     includes="${class.files}"/>
        <antcall target="dist-jar-dl"/>
    </target>

    <target name="dist-jar-dl" unless="no-dl">
	<jar jarfile="${dist}/${jar.file.dl}"
             basedir="${build}"
	     includes="${class.files.dl}"/>
    </target>

    <target name="build" depends="dist,compile"/>

    <target name="run" depends="deploy">
	<java classname="${main.class}"
              fork="true"
	      classpath="build:${jini.jars}:${dist}/${jar.file}">
             <jvmarg value="-Djava.rmi.server.codebase=${codebase}"/>
             <jvmarg value="-Djava.security.policy=${res}/policy.all"/>
	     <!-- <arg value="resources/audio/file/"/> -->
	     <arg value="/home/httpd/html/soundconfigs/"/>
        </java>
    </target>

    <target name="deploy" depends="dist" unless="no-dl">
        <copy file="${dist}/${jar.file.dl}"
              todir="${httpd.classes}"/>
    </target>
</project>
